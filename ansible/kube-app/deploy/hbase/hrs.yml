apiVersion: v1
kind: Service
metadata:
  name: rs
  labels:
    app: rs
spec:
  ports:
  - port: 16020
    name: rs-port 
  - port: 16030
    name: rs-info-port
  clusterIP: None
  selector:
    app: rs
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: rs
spec:
  serviceName: rs
  replicas: {{ rs_replicas }}
  template:
    metadata:
      labels:
        app: rs
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        scheduler.alpha.kubernetes.io/affinity: >
            {
              "podAntiAffinity": {
                "requiredDuringSchedulingRequiredDuringExecution": [{
                  "labelSelector": {
                    "matchExpressions": [{
                      "key": "app",
                      "operator": "In",
                      "values": ["rs"]
                    }]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }]
              }
            }
    spec:
      containers:
      - name: rs
        imagePullPolicy: Always
        image: dckreg:5000/hbase:1.2.4
        ports:
        - containerPort: 16020
          name: rs-port
        - containerPort: 16030
          name: rs-info-port
        env:
        - name: MODE
          value: "rs"
        - name: ZK_LIST
          value: "{{ zk_list }}"
        - name: DFS_REPLICATION
          value: "{{ dfs_replication }}"
        command:
        - sh
        - -c
        - starthbase.sh
