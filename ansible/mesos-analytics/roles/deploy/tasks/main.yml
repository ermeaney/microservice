---
- name: deploy {{ app_id }}  marathon app
  uri:
    url: http://mrthn:8080/v2/apps/{{ app_group }}/{{ app_id }}
    method: PUT
    status_code: 200,201,204
    HEADER_Content-Type: "application/json"
    body: '{{ lookup("template", "marathon.json.j2") }}'
    body_format: json
  delegate_to: localhost
  when: app_id is defined

- name: Create hdfs alias
  lineinfile:
      dest=/etc/bashrc
      line="alias hdfs='sudo docker  run -it --net=host  -u hdfs -v /opt/hadoop:/opt/hadoop {{ docker_registry }}/{{ docker_image}}:{{ tag }}  /bin/bash'"
      state=present
  when: "'hdfs_cli' in  group_names and ansible_os_family == 'RedHat'"


- name: Create hdfs alias
  lineinfile:
      dest=/etc/bash.bashrc
      line="alias hdfs='sudo docker  run -it --net=host  -u hdfs -v /opt/hadoop:/opt/hadoop {{ docker_registry }}/{{ docker_image}}:{{ tag }}  /bin/bash'"
      state=present
  when: "'hdfs_cli' in  group_names and ansible_os_family == 'Debian'"

- name: Create spark shell Debian
  lineinfile:
      dest=/etc/bash.bashrc
      line="alias spark-shell='sudo docker run -u spark -w /home/spark -it  -e SPARK_LOCAL_IP={{ inventory_hostname }}  --net=host {{ docker_registry }}/{{ docker_image}}:{{ tag }} spark-shell --master spark://sm1:7077'"
  when: "'spark_shell' in  group_names and ansible_os_family == 'Debian'"

- name: Create spark shell Radhat
  lineinfile:
      dest=/etc/bashrc
      line="alias spark-shell='sudo docker run -u spark -w /home/spark -it  -e SPARK_LOCAL_IP={{ inventory_hostname }}  --net=host {{ docker_registry }}/{{ docker_image}}:{{ tag }} spark-shell --master spark://sm1:7077'"
  when: "'spark_shell' in  group_names and ansible_os_family == 'Radhat'"
