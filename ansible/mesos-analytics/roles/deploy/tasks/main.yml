---
- name: deploy {{ app_id }}  marathon app
  uri:
    url: http://mrthn:8080/v2/apps/{{ app_group }}/{{ app_id }}
    method: PUT
    status_code: 200,201,204
    HEADER_Content-Type: "application/json"
    body: '{{ lookup("template", "marathon.json.j2") }}'
    body_format: json
  delegate_to: localhost
  when: app_id is defined

- set_fact:
    bash_file: "/etc/bashrc"
    when: "ansible_os_family == 'RedHat'"

- set_fact:
    bash_file: "/etc/bash.bashrc"
    when: "ansible_os_family == 'Debian'"

- name: Create hdfs client
  lineinfile:
      dest={{ bash_file }}
      line="alias hdfs='sudo docker  run -it --net=host  -u hdfs -v /tmp/data:/tmp/data dckreg:5000/{{ docker_image}}:{{ tag }}  /bin/bash'"
      state=present
  when: "'hdfs_cli' in  group_names"

- name: Create spark client
  lineinfile:
      dest={{ bash_file }}
      line="alias spark='sudo docker run -u spark -w /home/spark -it -v /tmp/data:/tmp/data -e MASTER=--master spark://sm1:7077 -e SPARK_LOCAL_IP={{ inventory_hostname }} --net=host dckreg:5000/{{ docker_image}}:{{ tag }}  /bin/bash'"
  when: "'spark_cli' in  group_names"

- name: Create hbase client
  lineinfile:
      dest={{ bash_file }}
      line="alias hbase='sudo docker run -u hbase  -w /home/hbase -it  --net=host dckreg:5000/{{ docker_image}}:{{ tag }} /bin/bash'"
  when: "'hbase_cli' in  group_names"

- name: Create /user/hbase dir on hdfs
  command: docker run  --net=host dckreg:5000/hdfs:2.7 hdfs dfs -mkdir -p /user/hbase
  delegate_to: localhost
  when: "'hbase_cli' in  group_names" 

- name: change owner of /user/hbase dir on hdfs
  command: docker run  --net=host dckreg:5000/hdfs:2.7 hdfs dfs -chown hbase  /user/hbase
  delegate_to: localhost
  when: "'hbase_cli' in  group_names" 

- name:  create kafka client
  lineinfile:
      dest={{ bash_file }}
      line="alias kafka='sudo docker run -u kafka  -w /home/kafka -it  --net=host dckreg:5000/{{ docker_image}}:{{ tag }} /bin/bash'"
  when: "'kafka_cli' in  group_names"

